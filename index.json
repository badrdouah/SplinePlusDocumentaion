{
  "Modifiers/Animation/BasicFollowers/Introduction.html": {
    "href": "Modifiers/Animation/BasicFollowers/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Animation/GroupFollowers/Introduction.html": {
    "href": "Modifiers/Animation/GroupFollowers/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Animation/SplinePathFinding/Introduction.html": {
    "href": "Modifiers/Animation/SplinePathFinding/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Mesh/ExtrudeMesh/Introduction.html": {
    "href": "Modifiers/Mesh/ExtrudeMesh/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Mesh/MeshDeform/Introduction.html": {
    "href": "Modifiers/Mesh/MeshDeform/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Mesh/PlaneMesh/Introduction.html": {
    "href": "Modifiers/Mesh/PlaneMesh/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "Modifiers/Mesh/TubeMesh/Introduction.html": {
    "href": "Modifiers/Mesh/TubeMesh/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path. Feature Coverage Matrix This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific tool or modifier. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "SplinePlusR/DrawYourFirstSpline.html": {
    "href": "SplinePlusR/DrawYourFirstSpline.html",
    "title": "Drawing Your First Spline | Spline Plus documentation",
    "keywords": "Drawing Your First Spline Follow these steps to draw your first spline using Spline Plus: Add Spline Plus FollowerGameObject to Scene: Navigate to Tools > Spline Plus. Select Spline Plus FollowerGameObject. Go to its inspector. Editor Mode Initialization: Since there are no nodes or branches yet, Spline Plus will automatically enable the editor mode to facilitate spline creation. - Click anywhere in the Scene View to add your first node. Add Another Branch: In the toolbar of the Spline Plus FollowerGameObject, navigate to Branch > Add. Adding Nodes to the New Branch: Click in the Scene View to add nodes for the newly created branch. Press Esc on your keyboard to exit edit mode and switch back to selection mode once you're done adding nodes. Fusing Nodes: To connect the selected node to another one in a different branch. Navigate to the Spline Plus toolbar, then Node > Fuse. Click the node you want to fuse with the selected node. A sharedData node will be created. You can check the debug area while selecting the sharedData node to view the sharedData node index in the selected branch, the connected branches key of the sharedData node, and the branch key of the currently selected branch. Switching Selection Between Connected Branches: A shortcut to switch selection between the branches connected to the sharedData node: Make sure you're selecting the sharedData node. Press Return on your keyboard. Follow these steps to create your first spline in Spline Plus. Experiment with different nodes and branches to achieve your desired spline shape and complexity."
  },
  "SplinePlusR/GetStarted.html": {
    "href": "SplinePlusR/GetStarted.html",
    "title": "| Spline Plus documentation",
    "keywords": "Installation To install Spline Plus R, follow these simple steps: Package Manager: Install the Spline Plus R package from the Unity Package Manager (UPM). Add to Project: Add all the content from the package to your Unity project. Once installed, you'll notice a new toolbar button labeled \"Tools\". Under the \"Tools\" menu, you'll find \"Spline Plus R\". Clicking on this option will create a new Spline Plus R game object in your scene. Inspector Once you've added the Spline Plus R to your Unity project, you can access its various features and settings from the Inspector window. Exploring Spline Plus R Features There are two ways to access the features of Spline Plus R. The quickest and most commonly used method is by right-clicking in the Unity 3D scene view. This action opens a menu that provides quick access to all the features you need. Nodes: Branches: Spline: Modifiers Once you click on one of the modifiers in the modifiers list, the correspondig component is going to be added automatically to the selected Spline Plus R gameObject. Animation: These modifiers offer basic and group followers for spline-based animations. They come equipped with an advanced event system to facilitate interactive spline following. The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower. Mesh: Modifiers in this category offer procedural mesh generation capabilities. It provides options such as plane mesh, tube mesh, extrude mesh, and mesh deform to create procedural meshes along the spline. Important This table provides an overview of the features available and its associated tools and modifiers. Each check mark (✓) indicates the presence of the corresponding modifier in the specific package. Spline Plus R (Core) Basic Followers Group Followers Path Finding Mesh Deform Plane Mesh Tube Mesh Extrude Mesh Spline Plus R ✓ ✓ ✓ Spline Mesh Deform ✓ ✓ ✓ ✓ ✓ ✓ ✓ Spline Path Finding ✓ ✓ ✓"
  },
  "SplinePlusR/Introduction.html": {
    "href": "SplinePlusR/Introduction.html",
    "title": "Introducing Spline Plus R for Unity 3D | Spline Plus documentation",
    "keywords": "Introducing Spline Plus R for Unity 3D Welcome to the Spline Plus R documentation page, the revamped spline system built upon Spline Plus. This next-generation spline tool for Unity 3D offers massive improvements with a dynamic, modular, flexible, and performance-optimized core. Designed with user-friendliness in mind, Spline Plus R ensures flawless spline management within Unity3D. What's New in Spline Plus R The new core system and design enhance your spline editing capabilities in Unity 3D, making the process more efficient and powerful. With an advanced selection system, you can easily manage multiple selections for nodes and branches, allowing for smooth operations and intricate edits. The intuitive user interface lets you access all features directly from the right-click options menu in the scene view, with shortcuts for quick navigation and a seamless workflow. The multiple branches system provides unparalleled flexibility and precision in managing multiple branches. Comprehensive node management allows you to effortlessly add, delete, connect, diffuse, break, and chamfer nodes. You can also control node normals, speed, and scale to fine-tune animations and mesh modifiers. The spline projection system enables you to project spline shapes onto 3D meshes with ease, opening up new possibilities for complex modeling. Enhanced API functions are available for developers, offering comprehensive reference material covering all aspects of the plugin's API. You can plug in a variety of modifiers to enhance your spline shapes with additional features. Animation Modifiers Discover the powerful animation modifiers powered by Spline Plus R, designed to create and manage follower animations on your spline branches in Unity 3D. These tools provide a comprehensive solution for dynamic and flexible animation workflows. Basic Followers allow you to control a single game object as a spline follower with access to various features for achieving desired animation results. Group Followers let you manage a set of basic follower game objects that act as one unit, perfect for applications like trains. An advanced events system lets you place events anywhere at a defined distance on any branch with a simple, powerful system. Mesh Modifiers Explore the powerful mesh modifiers powered by Spline Plus R, designed to generate procedural meshes for your spline branches in Unity 3D. These tools provide a comprehensive solution for creating dynamic and flexible mesh structures. Mesh Deform lets you generate procedural meshes on your spline branches using custom meshes from 3D programs like 3ds Max or Blender. You can choose between Mesh Alignment Only or Alignment and Deformation Together along the spline branches. The system supports CPU Single/Multi-threaded and GPU processing for mesh deformation. Extrude Mesh allows you to extrude spline branches into 3D meshes, Plane Mesh transforms spline branches into 3D plane meshes. Tube Mesh transforms spline branches into 3D tube meshes. Spline Path Finding (New Modifier) The Spline Path Finding animation modifier is a new addition dedicated to pathfinding on splines. It helps you find the shortest path from an agent follower to a goal follower, with configurable search direction and collision radius. This new modifier is based on Basic Followers, so all features of Basic Followers transfer to Spline Path Finding. You have control over acceleration and deceleration, and you can use the advanced events system for placing events along the spline path."
  },
  "SplinePlusR/Notions.html": {
    "href": "SplinePlusR/Notions.html",
    "title": "Notions | Spline Plus documentation",
    "keywords": "Notions Node Nodes are control points elements that form a branch in Spline Plus R. They are visually represented in the scene view by spherical markers. Branch A branch is composed of nodes connected together. The selected branch is highlighted with a green color in the scene view. Shared Node A shared node is a node that is shared by more than one branch. It is indicated by a purple spherical markers in your scene view. Selection Before selecting nodes or branches, ensure that the Unity 3D Move tool is not selected. There are two selection modes: nodes selection and branches selection. You can switch between these modes from the scene view right-click items menu. For node selection mode, choose `Node` > `Select` , and for branch selection mode, choose `Branch` > `Select` . There are two ways to select nodes in Spline Plus R. The first method is to click directly on a node. To select multiple nodes, hold the Ctrl key on your keyboard while clicking. The second method is to use rectangular selection. Click and drag in your Unity 3D scene view to draw a rectangle; any nodes within this rectangle will be selected. To select multiple nodes using rectangular selection, hold the Ctrl key while dragging to include additional nodes in your selection. Tip The same selection methods for nodes also apply to branches."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index.html",
    "title": "Method Add_Node_At_Index | Spline Plus documentation",
    "keywords": "Method Add_Node_At_Index | Edit this page View Source Add_Node_At_Index(SplinePlus, int, NodeModel, int, bool, bool) Adds a new node at the specified index within the node list of the specified branch in the SplinePlus object. Declaration public static void Add_Node_At_Index(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, int index, bool doSelect = true, bool autoSmoothHandles = true) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch to which the node will be added. NodeModel nodeToAdd The NodeModel representing the node to add. int index The index at which the node will be inserted within the branch's node list. bool doSelect bool autoSmoothHandles"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning.html",
    "title": "Method Add_Node_Beginning | Spline Plus documentation",
    "keywords": "Method Add_Node_Beginning | Edit this page View Source Add_Node_Beginning(SplinePlus, int, NodeModel, bool, bool) Adds a new node at the beginning of the specified branch in the SplinePlus object. Declaration public static void Add_Node_Beginning(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, bool doSelect = true, bool autoSmoothHandles = true) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch to which the node will be added. NodeModel nodeToAdd The NodeModel representing the node to add. bool doSelect bool autoSmoothHandles"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Add_Node_End.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Add_Node_End.html",
    "title": "Method Add_Node_End | Spline Plus documentation",
    "keywords": "Method Add_Node_End | Edit this page View Source Add_Node_End(SplinePlus, int, NodeModel, bool, bool) Adds a new node at the end of the specified branch in the SplinePlus object. Declaration public static void Add_Node_End(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, bool doSelect = true, bool autoSmoothHandles = true) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch to which the node will be added. NodeModel nodeToAdd The NodeModel representing the node to add. bool doSelect bool autoSmoothHandles"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index.html",
    "title": "Method Add_Nodes_At_Index | Spline Plus documentation",
    "keywords": "Method Add_Nodes_At_Index | Edit this page View Source Add_Nodes_At_Index(SplinePlus, int, NodeModel[], int, bool, bool) Adds an array of nodes at a specified index in a branch of the SplinePlus object. Declaration public static void Add_Nodes_At_Index(SplinePlus splinePlus, int branchKey, NodeModel[] nodesToAdd, int index, bool doSelect = true, bool autoSmoothHandles = true) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to which nodes will be added. int branchKey The key of the branch where nodes will be added. NodeModel[] nodesToAdd The array of NodeModel objects to add to the branch. int index The index at which the nodes should be inserted. bool doSelect (Optional) If set to true, the last node added will be selected. Default is true. bool autoSmoothHandles (Optional) If set to true, handles for the nodes will be automatically smoothed. Default is true. Remarks If the branchKey does not exist within the SplinePlus object, a new branch will be created. Nodes that are already present in the branch will be ignored. Examples Here is an example of how to use Add_Nodes_At_Index: NodeModel[] nodes = new NodeModel[] { new NodeModel(), new NodeModel() }; SplinePlus mySplinePlus = new SplinePlus(); int myBranchKey = 0; int insertIndex = 1; Add_Nodes_At_Index(mySplinePlus, myBranchKey, nodes, insertIndex);"
  },
  "api/ElseForty.splineplus.api.BranchAPI.BreakAt.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.BreakAt.html",
    "title": "Method BreakAt | Spline Plus documentation",
    "keywords": "Method BreakAt | Edit this page View Source BreakAt(SplinePlus, NodeModel) Breaks a spline branch at the specified node, creating a new branch starting from that node. Declaration public static void BreakAt(SplinePlus splinePlus, NodeModel node) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. NodeModel node The node at which to break the spline branch."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Create.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Create.html",
    "title": "Method Create | Spline Plus documentation",
    "keywords": "Method Create | Edit this page View Source Create(SplinePlus) Creates a new branch in the specified SplinePlus object. Declaration public static int Create(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to create the branch in. Returns Type Description int The key of the newly created branch."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Delete.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Delete.html",
    "title": "Method Delete | Spline Plus documentation",
    "keywords": "Method Delete | Edit this page View Source Delete(SplinePlus, int) Deletes the specified branch from the SplinePlus object. Declaration public static void Delete(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch to be deleted."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Diffuse.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Diffuse.html",
    "title": "Method Diffuse | Spline Plus documentation",
    "keywords": "Method Diffuse | Edit this page View Source Diffuse(SplinePlus, int) Diffuses sharedData nodes in a specific branch of a SplinePlus object. Declaration public static void Diffuse(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch with sharedData nodes to be diffused. int branchKey An integer representing the key of the branch to be processed."
  },
  "api/ElseForty.splineplus.api.BranchAPI.FlipHandles.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.FlipHandles.html",
    "title": "Method FlipHandles | Spline Plus documentation",
    "keywords": "Method FlipHandles | Edit this page View Source FlipHandles(SplinePlus, int, BranchDirection_Enum) Declaration public static void FlipHandles(SplinePlus splinePlus, int branchKey, BranchDirection_Enum branchDirection) Parameters Type Name Description SplinePlus splinePlus int branchKey BranchDirection_Enum branchDirection"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Direction.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Direction.html",
    "title": "Method Get_Direction | Spline Plus documentation",
    "keywords": "Method Get_Direction | Edit this page View Source Get_Direction(SplinePlus, int) Declaration public static BranchDirection_Enum Get_Direction(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus int branchKey Returns Type Description BranchDirection_Enum"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Length.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Length.html",
    "title": "Method Get_Length | Spline Plus documentation",
    "keywords": "Method Get_Length | Edit this page View Source Get_Length(SplinePlus, int) Calculates and returns the length of a branch in a SplinePlus object. Declaration public static float Get_Length(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey An integer representing the key of the branch. Returns Type Description float The length of the specified branch as a floating-point number."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Nodes.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Nodes.html",
    "title": "Method Get_Nodes | Spline Plus documentation",
    "keywords": "Method Get_Nodes | Edit this page View Source Get_Nodes(SplinePlus, int) Retrieves the list of nodes belonging to the specified branch in the SplinePlus object. Declaration public static List<NodeModel> Get_Nodes(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch whose nodes will be retrieved. Returns Type Description List<NodeModel> The list of NodeModel objects representing the nodes of the specified branch, or null if the branch does not exist."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Normals.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Normals.html",
    "title": "Method Get_Normals | Spline Plus documentation",
    "keywords": "Method Get_Normals | Edit this page View Source Get_Normals(SplinePlus, int) Retrieves the normals of a branch in a SplinePlus object. Declaration public static List<Vector3> Get_Normals(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey An integer representing the key of the branch. Returns Type Description List<Vector3> A list of Vector3 objects representing the normals of the specified branch. Returns null if the branch with the specified key is not found."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Tangents.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Tangents.html",
    "title": "Method Get_Tangents | Spline Plus documentation",
    "keywords": "Method Get_Tangents | Edit this page View Source Get_Tangents(SplinePlus, int) Retrieves the tangents of a branch in a SplinePlus object. Declaration public static List<Vector3> Get_Tangents(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey An integer representing the key of the branch. Returns Type Description List<Vector3> A list of Vector3 objects representing the tangents of the specified branch. Returns null if the branch with the specified key is not found."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Get_Vertices.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Get_Vertices.html",
    "title": "Method Get_Vertices | Spline Plus documentation",
    "keywords": "Method Get_Vertices | Edit this page View Source Get_Vertices(SplinePlus, int) Retrieves the vertices of a branch in a SplinePlus object. Declaration public static List<Vector3> Get_Vertices(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey An integer representing the key of the branch. Returns Type Description List<Vector3> A list of Vector3 objects representing the vertices of the specified branch. Returns null if the branch with the specified key is not found."
  },
  "api/ElseForty.splineplus.api.BranchAPI.IsReversed.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.IsReversed.html",
    "title": "Method IsReversed | Spline Plus documentation",
    "keywords": "Method IsReversed | Edit this page View Source IsReversed(SplinePlus, int) Reverses the order of nodes in a specific branch of a SplinePlus object and flips the handles for each node. Declaration public static void IsReversed(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch to be reversed. int branchKey An integer representing the key of the branch to be reversed."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Merge.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Merge.html",
    "title": "Method Merge | Spline Plus documentation",
    "keywords": "Method Merge | Edit this page View Source Merge(SplinePlus, int, int) Merges two branches of a SplinePlus object into one branch. Declaration public static int Merge(SplinePlus splinePlus, int branchKey1, int branchKey2) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branches to be merged. int branchKey1 An integer representing the key of the first branch to be merged. int branchKey2 An integer representing the key of the second branch to be merged. Returns Type Description int An integer representing the key of the merged branch."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Selected.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Selected.html",
    "title": "Method Selected | Spline Plus documentation",
    "keywords": "Method Selected | Edit this page View Source Selected(SplinePlus) Retrieves the currently selected branch from the specified SplinePlus object. If no branch is selected, creates a new branch and sets it as selected. Declaration public static BranchModel Selected(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. Returns Type Description BranchModel The currently selected branch, or null if no branch is found."
  },
  "api/ElseForty.splineplus.api.BranchAPI.Set_Direction.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Set_Direction.html",
    "title": "Method Set_Direction | Spline Plus documentation",
    "keywords": "Method Set_Direction | Edit this page View Source Set_Direction(SplinePlus, int, BranchDirection_Enum) Declaration public static void Set_Direction(SplinePlus splinePlus, int branchKey, BranchDirection_Enum branchDirection) Parameters Type Name Description SplinePlus splinePlus int branchKey BranchDirection_Enum branchDirection"
  },
  "api/ElseForty.splineplus.api.BranchAPI.Update.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.Update.html",
    "title": "Method Update | Spline Plus documentation",
    "keywords": "Method Update | Edit this page View Source Update(SplinePlus, int) Updates the geometry and properties of a specific branch of the spline. Declaration public static void Update(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. int branchKey The key identifying the branch to update."
  },
  "api/ElseForty.splineplus.api.BranchAPI.html": {
    "href": "api/ElseForty.splineplus.api.BranchAPI.html",
    "title": "Class BranchAPI | Spline Plus documentation",
    "keywords": "Class BranchAPI Provides methods for interacting with branches of a SplinePlus object. Inheritance object BranchAPI Namespace: ElseForty.splineplus.api Assembly: .dll Syntax public class BranchAPI Methods Name Description Add_Node_At_Index(SplinePlus, int, NodeModel, int, bool, bool) Adds a new node at the specified index within the node list of the specified branch in the SplinePlus object. Add_Node_Beginning(SplinePlus, int, NodeModel, bool, bool) Adds a new node at the beginning of the specified branch in the SplinePlus object. Add_Node_End(SplinePlus, int, NodeModel, bool, bool) Adds a new node at the end of the specified branch in the SplinePlus object. Add_Nodes_At_Index(SplinePlus, int, NodeModel[], int, bool, bool) Adds an array of nodes at a specified index in a branch of the SplinePlus object. BreakAt(SplinePlus, NodeModel) Breaks a spline branch at the specified node, creating a new branch starting from that node. Create(SplinePlus) Creates a new branch in the specified SplinePlus object. Delete(SplinePlus, int) Deletes the specified branch from the SplinePlus object. Diffuse(SplinePlus, int) Diffuses sharedData nodes in a specific branch of a SplinePlus object. FlipHandles(SplinePlus, int, BranchDirection_Enum) Get_Direction(SplinePlus, int) Get_Length(SplinePlus, int) Calculates and returns the length of a branch in a SplinePlus object. Get_Nodes(SplinePlus, int) Retrieves the list of nodes belonging to the specified branch in the SplinePlus object. Get_Normals(SplinePlus, int) Retrieves the normals of a branch in a SplinePlus object. Get_Tangents(SplinePlus, int) Retrieves the tangents of a branch in a SplinePlus object. Get_Vertices(SplinePlus, int) Retrieves the vertices of a branch in a SplinePlus object. IsReversed(SplinePlus, int) Reverses the order of nodes in a specific branch of a SplinePlus object and flips the handles for each node. Merge(SplinePlus, int, int) Merges two branches of a SplinePlus object into one branch. Selected(SplinePlus) Retrieves the currently selected branch from the specified SplinePlus object. If no branch is selected, creates a new branch and sets it as selected. Set_Direction(SplinePlus, int, BranchDirection_Enum) Update(SplinePlus, int) Updates the geometry and properties of a specific branch of the spline."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Chamfer.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Chamfer.html",
    "title": "Method Chamfer | Spline Plus documentation",
    "keywords": "Method Chamfer | Edit this page View Source Chamfer(SplinePlus, NodeModel, float) Applies a chamfer effect to the specified node in the SplinePlus object, creating new nodes and branches as needed. Declaration public static void Chamfer(SplinePlus splinePlus, NodeModel node, float value) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. NodeModel node The node to apply the chamfer effect to. float value The value determining the extent of the chamfer effect."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Collapse.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Collapse.html",
    "title": "Method Collapse | Spline Plus documentation",
    "keywords": "Method Collapse | Edit this page View Source Collapse(SplinePlus, List<NodeModel>) Connects the origin node with the target node in the specified spline, connecting their branches if necessary. Declaration public static void Collapse(SplinePlus splinePlus, List<NodeModel> nodes) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. List<NodeModel> nodes"
  },
  "api/ElseForty.splineplus.api.NodeAPI.Compound.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Compound.html",
    "title": "Method Compound | Spline Plus documentation",
    "keywords": "Method Compound | Edit this page View Source Compound(SplinePlus, NodeModel) Compounds the specified node with the connected branches, merging them into a single branch. Declaration public static void Compound(SplinePlus splinePlus, NodeModel node) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. NodeModel node The node to be compounded."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Connect.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Connect.html",
    "title": "Method Connect | Spline Plus documentation",
    "keywords": "Method Connect | Edit this page View Source Connect(SplinePlus, NodeModel, NodeModel) Declaration public static int Connect(SplinePlus splinePlus, NodeModel node1, NodeModel node2) Parameters Type Name Description SplinePlus splinePlus NodeModel node1 NodeModel node2 Returns Type Description int"
  },
  "api/ElseForty.splineplus.api.NodeAPI.Create.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Create.html",
    "title": "Method Create | Spline Plus documentation",
    "keywords": "Method Create | Edit this page View Source Create(SplinePlus, Vector3, Vector3, Vector3, NodeType_Enum) Creates a new node in the spline. Declaration public static NodeModel Create(SplinePlus splinePlus, Vector3 nodeWorldPos, Vector3 firstHandleLocalPos, Vector3 secondHandleLocalPos, NodeType_Enum nodeType = null) Parameters Type Name Description SplinePlus splinePlus The SplinePlus component to which the node belongs. Vector3 nodeWorldPos The world position of the node. Vector3 firstHandleLocalPos The local position of the first handle relative to the node. Vector3 secondHandleLocalPos The local position of the second handle relative to the node. NodeType_Enum nodeType The type of the node. Default is NodeType_Enum.Smooth. Returns Type Description NodeModel The created NodeModel instance. | Edit this page View Source Create(SplinePlus, Vector3) Creates a new node in the specified spline. Declaration public static NodeModel Create(SplinePlus splinePlus, Vector3 nodeWorldPos) Parameters Type Name Description SplinePlus splinePlus The spline to create the node in. Vector3 nodeWorldPos The world position of the node. Returns Type Description NodeModel The created node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Create_At_Distance.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Create_At_Distance.html",
    "title": "Method Create_At_Distance | Spline Plus documentation",
    "keywords": "Method Create_At_Distance | Edit this page View Source Create_At_Distance(SplinePlus, int, float) Creates a new node at a specific distance along the specified branch in the given SplinePlus object. Declaration public static NodeModel Create_At_Distance(SplinePlus splinePlus, int branchKey, float distance) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey The key of the branch on which to create the node. float distance The distance along the branch where the new node will be created. Returns Type Description NodeModel The newly created NodeModel object."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Delete.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Delete.html",
    "title": "Method Delete | Spline Plus documentation",
    "keywords": "Method Delete | Edit this page View Source Delete(SplinePlus, NodeModel) Deletes the specified node from the spline and removes it from all connected branches. Declaration public static void Delete(SplinePlus splinePlus, NodeModel nodeToRemove) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. NodeModel nodeToRemove The node to be deleted."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Diffuse.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Diffuse.html",
    "title": "Method Diffuse | Spline Plus documentation",
    "keywords": "Method Diffuse | Edit this page View Source Diffuse(SplinePlus, NodeModel) Diffuses the specified node in the spline, creating a duplicate node on each connected branch and connecting them. Declaration public static List<NodeModel> Diffuse(SplinePlus splinePlus, NodeModel node) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the spline. NodeModel node The node to be diffused. Returns Type Description List<NodeModel>"
  },
  "api/ElseForty.splineplus.api.NodeAPI.Duplicate.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Duplicate.html",
    "title": "Method Duplicate | Spline Plus documentation",
    "keywords": "Method Duplicate | Edit this page View Source Duplicate(SplinePlus, NodeModel, bool) Declaration public static NodeModel Duplicate(SplinePlus splinePlus, NodeModel originNode, bool copySharedNodeData = false) Parameters Type Name Description SplinePlus splinePlus NodeModel originNode bool copySharedNodeData Returns Type Description NodeModel"
  },
  "api/ElseForty.splineplus.api.NodeAPI.FlipHandles.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.FlipHandles.html",
    "title": "Method FlipHandles | Spline Plus documentation",
    "keywords": "Method FlipHandles | Edit this page View Source FlipHandles(SplinePlus, int, int) Flips the handles of a node at the specified index in the branch identified by the given key. Declaration public static void FlipHandles(SplinePlus splinePlus, int branchKey, int NodeIndex) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey The key of the branch containing the node. int NodeIndex The index of the node within the branch. | Edit this page View Source FlipHandles(NodeModel) Creates a new node with flipped handles based on the provided node, doesn't change the node provided Declaration public static NodeModel FlipHandles(NodeModel node) Parameters Type Name Description NodeModel node The node whose handles will be flipped. Returns Type Description NodeModel A new NodeModel object with flipped handles."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Connected_Branches.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Connected_Branches.html",
    "title": "Method Get_Connected_Branches | Spline Plus documentation",
    "keywords": "Method Get_Connected_Branches | Edit this page View Source Get_Connected_Branches(NodeModel) Retrieves a list of branch keys connected to the specified node. Declaration public static List<int> Get_Connected_Branches(NodeModel node) Parameters Type Name Description NodeModel node The node to retrieve connected branches for. Returns Type Description List<int> A list of branch keys connected to the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Handle_1_Position.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Handle_1_Position.html",
    "title": "Method Get_Handle_1_Position | Spline Plus documentation",
    "keywords": "Method Get_Handle_1_Position | Edit this page View Source Get_Handle_1_Position(NodeModel, SpaceType_Enum) Gets the position of the first handle (point1) of the specified node based on the provided space type. Declaration public static Vector3 Get_Handle_1_Position(NodeModel node, SpaceType_Enum spaceType) Parameters Type Name Description NodeModel node The NodeModel object from which to get the first handle's position. SpaceType_Enum spaceType The space in which the position is requested (local or world). Returns Type Description Vector3 The position of the first handle (point1) of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Handle_2_Position.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Handle_2_Position.html",
    "title": "Method Get_Handle_2_Position | Spline Plus documentation",
    "keywords": "Method Get_Handle_2_Position | Edit this page View Source Get_Handle_2_Position(NodeModel, SpaceType_Enum) Gets the position of the second handle (point2) of the specified node based on the provided space type. Declaration public static Vector3 Get_Handle_2_Position(NodeModel node, SpaceType_Enum spaceType) Parameters Type Name Description NodeModel node The NodeModel object from which to get the second handle's position. SpaceType_Enum spaceType The space in which the position is requested (local or world). Returns Type Description Vector3 The position of the second handle (point2) of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Normal.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Normal.html",
    "title": "Method Get_Normal | Spline Plus documentation",
    "keywords": "Method Get_Normal | Edit this page View Source Get_Normal(NodeModel) Gets the normal angle of the specified node. Declaration public static float Get_Normal(NodeModel node) Parameters Type Name Description NodeModel node The node to get the normal angle from. Returns Type Description float The normal angle value of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Position.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Position.html",
    "title": "Method Get_Position | Spline Plus documentation",
    "keywords": "Method Get_Position | Edit this page View Source Get_Position(NodeModel, SpaceType_Enum) Gets the position of the specified node based on the provided space type. Declaration public static Vector3 Get_Position(NodeModel node, SpaceType_Enum spaceType) Parameters Type Name Description NodeModel node The NodeModel object from which to get the position. SpaceType_Enum spaceType The space in which the position is requested (local or world). Returns Type Description Vector3 The position of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Scale.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Scale.html",
    "title": "Method Get_Scale | Spline Plus documentation",
    "keywords": "Method Get_Scale | Edit this page View Source Get_Scale(NodeModel) Gets the scale of the specified node. Declaration public static float Get_Scale(NodeModel node) Parameters Type Name Description NodeModel node The node to get the scale from. Returns Type Description float The scale of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Speed.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Speed.html",
    "title": "Method Get_Speed | Spline Plus documentation",
    "keywords": "Method Get_Speed | Edit this page View Source Get_Speed(NodeModel) Gets the speed of the specified node. Declaration public static float Get_Speed(NodeModel node) Parameters Type Name Description NodeModel node The node to get the speed from. Returns Type Description float The speed of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Get_Type.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Get_Type.html",
    "title": "Method Get_Type | Spline Plus documentation",
    "keywords": "Method Get_Type | Edit this page View Source Get_Type(NodeModel) Gets the type of the specified node. Declaration public static NodeType_Enum Get_Type(NodeModel node) Parameters Type Name Description NodeModel node The node whose type will be retrieved. Returns Type Description NodeType_Enum The type of the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Is_Shared.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Is_Shared.html",
    "title": "Method Is_Shared | Spline Plus documentation",
    "keywords": "Method Is_Shared | Edit this page View Source Is_Shared(NodeModel) Checks if the specified node is sharedData among multiple branches. Declaration public static bool Is_Shared(NodeModel node) Parameters Type Name Description NodeModel node The node to check. Returns Type Description bool True if the node is sharedData among multiple branches, false otherwise."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Set_Handle_Position.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Set_Handle_Position.html",
    "title": "Method Set_Handle_Position | Spline Plus documentation",
    "keywords": "Method Set_Handle_Position | Edit this page View Source Set_Handle_Position(NodeModel, Vector3, HandleType_Enum, SpaceType_Enum) Sets the position of a handle on a node. Declaration public static void Set_Handle_Position(NodeModel node, Vector3 position, HandleType_Enum handleType, SpaceType_Enum spaceType) Parameters Type Name Description NodeModel node The node to set the handle position on. Vector3 position The new position of the handle. HandleType_Enum handleType The type of handle to set the position for. SpaceType_Enum spaceType The coordinate space to use for setting the position."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Set_Normal.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Set_Normal.html",
    "title": "Method Set_Normal | Spline Plus documentation",
    "keywords": "Method Set_Normal | Edit this page View Source Set_Normal(SplinePlus, NodeModel, float) Sets the normal angle of the specified node and updates the connected branches' nodes accordingly. Declaration public static void Set_Normal(SplinePlus splinePlus, NodeModel node, float normalAngle) Parameters Type Name Description SplinePlus splinePlus The SplinePlus component. NodeModel node The node to set the normal angle for. float normalAngle The new normal angle value."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Set_Scale.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Set_Scale.html",
    "title": "Method Set_Scale | Spline Plus documentation",
    "keywords": "Method Set_Scale | Edit this page View Source Set_Scale(NodeModel, float) Sets the scale of the specified node. Declaration public static void Set_Scale(NodeModel node, float scale) Parameters Type Name Description NodeModel node The node whose scale will be set. float scale The scale value to set."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Set_TargetSpeed.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Set_TargetSpeed.html",
    "title": "Method Set_TargetSpeed | Spline Plus documentation",
    "keywords": "Method Set_TargetSpeed | Edit this page View Source Set_TargetSpeed(NodeModel, float) Sets the speed of movement for the specified node. Declaration public static void Set_TargetSpeed(NodeModel node, float speed) Parameters Type Name Description NodeModel node The node whose speed will be set. float speed The speed value to set."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Set_Type.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Set_Type.html",
    "title": "Method Set_Type | Spline Plus documentation",
    "keywords": "Method Set_Type | Edit this page View Source Set_Type(NodeModel, NodeType_Enum) Sets the type of the specified node. Declaration public static void Set_Type(NodeModel node, NodeType_Enum newNodeType) Parameters Type Name Description NodeModel node The node whose type will be set. NodeType_Enum newNodeType The new type for the node."
  },
  "api/ElseForty.splineplus.api.NodeAPI.Update.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.Update.html",
    "title": "Method Update | Spline Plus documentation",
    "keywords": "Method Update | Edit this page View Source Update(SplinePlus, NodeModel) Updates the branches connected to the specified node in the given SplinePlus object. Declaration public static void Update(SplinePlus splinePlus, NodeModel node) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the node and its connected branches. NodeModel node The node whose connected branches need to be updated."
  },
  "api/ElseForty.splineplus.api.NodeAPI.html": {
    "href": "api/ElseForty.splineplus.api.NodeAPI.html",
    "title": "Class NodeAPI | Spline Plus documentation",
    "keywords": "Class NodeAPI Provides methods for manipulating nodes in a SplinePlus object, including retrieving selected nodes, creating new nodes, updating node positions, setting node positions, and chamfering nodes. Inheritance object NodeAPI Namespace: ElseForty.splineplus.api Assembly: .dll Syntax public class NodeAPI Methods Name Description Chamfer(SplinePlus, NodeModel, float) Applies a chamfer effect to the specified node in the SplinePlus object, creating new nodes and branches as needed. Collapse(SplinePlus, List<NodeModel>) Connects the origin node with the target node in the specified spline, connecting their branches if necessary. Compound(SplinePlus, NodeModel) Compounds the specified node with the connected branches, merging them into a single branch. Connect(SplinePlus, NodeModel, NodeModel) Create(SplinePlus, Vector3) Creates a new node in the specified spline. Create(SplinePlus, Vector3, Vector3, Vector3, NodeType_Enum) Creates a new node in the spline. Create_At_Distance(SplinePlus, int, float) Creates a new node at a specific distance along the specified branch in the given SplinePlus object. Delete(SplinePlus, NodeModel) Deletes the specified node from the spline and removes it from all connected branches. Diffuse(SplinePlus, NodeModel) Diffuses the specified node in the spline, creating a duplicate node on each connected branch and connecting them. Duplicate(SplinePlus, NodeModel, bool) FlipHandles(NodeModel) Creates a new node with flipped handles based on the provided node, doesn't change the node provided FlipHandles(SplinePlus, int, int) Flips the handles of a node at the specified index in the branch identified by the given key. Get_Connected_Branches(NodeModel) Retrieves a list of branch keys connected to the specified node. Get_Handle_1_Position(NodeModel, SpaceType_Enum) Gets the position of the first handle (point1) of the specified node based on the provided space type. Get_Handle_2_Position(NodeModel, SpaceType_Enum) Gets the position of the second handle (point2) of the specified node based on the provided space type. Get_Normal(NodeModel) Gets the normal angle of the specified node. Get_Position(NodeModel, SpaceType_Enum) Gets the position of the specified node based on the provided space type. Get_Scale(NodeModel) Gets the scale of the specified node. Get_Speed(NodeModel) Gets the speed of the specified node. Get_Type(NodeModel) Gets the type of the specified node. Is_Shared(NodeModel) Checks if the specified node is sharedData among multiple branches. Set_Handle_Position(NodeModel, Vector3, HandleType_Enum, SpaceType_Enum) Sets the position of a handle on a node. Set_Normal(SplinePlus, NodeModel, float) Sets the normal angle of the specified node and updates the connected branches' nodes accordingly. Set_Scale(NodeModel, float) Sets the scale of the specified node. Set_TargetSpeed(NodeModel, float) Sets the speed of movement for the specified node. Set_Type(NodeModel, NodeType_Enum) Sets the type of the specified node. Update(SplinePlus, NodeModel) Updates the branches connected to the specified node in the given SplinePlus object."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Get_Offset.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Get_Offset.html",
    "title": "Method Get_Offset | Spline Plus documentation",
    "keywords": "Method Get_Offset | Edit this page View Source Get_Offset(SplinePlus) Gets the offset value used in raycasting for the specified SplinePlus object. Declaration public static float Get_Offset(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to get the offset value for. Returns Type Description float The offset value used in raycasting."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Get_PreserveNormals.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Get_PreserveNormals.html",
    "title": "Method Get_PreserveNormals | Spline Plus documentation",
    "keywords": "Method Get_PreserveNormals | Edit this page View Source Get_PreserveNormals(SplinePlus) Gets the current preservation state of normals for the specified SplinePlus object. Declaration public static bool Get_PreserveNormals(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to get the preservation state of normals from. Returns Type Description bool True if normals preservation is enabled, false otherwise."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Get_Projection.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Get_Projection.html",
    "title": "Method Get_Projection | Spline Plus documentation",
    "keywords": "Method Get_Projection | Edit this page View Source Get_Projection(SplinePlus) Declaration public static bool Get_Projection(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus Returns Type Description bool"
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Get_RaycastLength.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Get_RaycastLength.html",
    "title": "Method Get_RaycastLength | Spline Plus documentation",
    "keywords": "Method Get_RaycastLength | Edit this page View Source Get_RaycastLength(SplinePlus) Gets the length of raycasts used in the projection for the specified SplinePlus object. Declaration public static float Get_RaycastLength(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to get the raycast length from. Returns Type Description float The length of raycasts used in the projection."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Project_BranchNodes.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Project_BranchNodes.html",
    "title": "Method Project_BranchNodes | Spline Plus documentation",
    "keywords": "Method Project_BranchNodes | Edit this page View Source Project_BranchNodes(SplinePlus, int) Declaration public static void Project_BranchNodes(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus int branchKey"
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Set_Offset.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Set_Offset.html",
    "title": "Method Set_Offset | Spline Plus documentation",
    "keywords": "Method Set_Offset | Edit this page View Source Set_Offset(SplinePlus, float) Sets the offset value used in raycasting for the specified SplinePlus object. Declaration public static void Set_Offset(SplinePlus splinePlus, float offset) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to set the offset value for. float offset The offset value to set for raycasting."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Set_PreserveNormals.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Set_PreserveNormals.html",
    "title": "Method Set_PreserveNormals | Spline Plus documentation",
    "keywords": "Method Set_PreserveNormals | Edit this page View Source Set_PreserveNormals(SplinePlus, bool) Sets the preservation state of normals for the specified SplinePlus object. Declaration public static void Set_PreserveNormals(SplinePlus splinePlus, bool value) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to set the preservation state of normals for. bool value The boolean value indicating whether to preserve normals."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Set_Projection.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Set_Projection.html",
    "title": "Method Set_Projection | Spline Plus documentation",
    "keywords": "Method Set_Projection | Edit this page View Source Set_Projection(SplinePlus, bool) Declaration public static void Set_Projection(SplinePlus splinePlus, bool isProjection) Parameters Type Name Description SplinePlus splinePlus bool isProjection"
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.Set_RaycastLength.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.Set_RaycastLength.html",
    "title": "Method Set_RaycastLength | Spline Plus documentation",
    "keywords": "Method Set_RaycastLength | Edit this page View Source Set_RaycastLength(SplinePlus, float) Sets the length of raycasts used in the projection for the specified SplinePlus object. Declaration public static void Set_RaycastLength(SplinePlus splinePlus, float length) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to set the raycast length for. float length The length of raycasts to set."
  },
  "api/ElseForty.splineplus.api.ProjectionAPI.html": {
    "href": "api/ElseForty.splineplus.api.ProjectionAPI.html",
    "title": "Class ProjectionAPI | Spline Plus documentation",
    "keywords": "Class ProjectionAPI Provides methods for updating the positions of vertices and nodes along spline branches by raycasting onto surfaces below, retrieving and setting projection properties such as raycast length, offset, debug ray visibility, and preservation of normals. Inheritance object ProjectionAPI Namespace: ElseForty.splineplus.api Assembly: .dll Syntax public class ProjectionAPI Methods Name Description Get_Offset(SplinePlus) Gets the offset value used in raycasting for the specified SplinePlus object. Get_PreserveNormals(SplinePlus) Gets the current preservation state of normals for the specified SplinePlus object. Get_Projection(SplinePlus) Get_RaycastLength(SplinePlus) Gets the length of raycasts used in the projection for the specified SplinePlus object. Project_BranchNodes(SplinePlus, int) Set_Offset(SplinePlus, float) Sets the offset value used in raycasting for the specified SplinePlus object. Set_PreserveNormals(SplinePlus, bool) Sets the preservation state of normals for the specified SplinePlus object. Set_Projection(SplinePlus, bool) Set_RaycastLength(SplinePlus, float) Sets the length of raycasts used in the projection for the specified SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Clear_Selection.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Clear_Selection.html",
    "title": "Method Clear_Selection | Spline Plus documentation",
    "keywords": "Method Clear_Selection | Edit this page View Source Clear_Selection(SplinePlus) Declaration public static void Clear_Selection(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus"
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Create.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Create.html",
    "title": "Method Create | Spline Plus documentation",
    "keywords": "Method Create | Edit this page View Source Create(Vector3) Creates a new SplinePlus object at the specified position. Declaration public static SplinePlus Create(Vector3 position) Parameters Type Name Description Vector3 position The position at which the new SplinePlus object will be created. Returns Type Description SplinePlus The newly created SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Deserialize.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Deserialize.html",
    "title": "Method Deserialize | Spline Plus documentation",
    "keywords": "Method Deserialize | Edit this page View Source Deserialize(SplinePlus, string) Deserializes the spline data from the specified file path and applies it to the given SplinePlus object. Declaration public static void Deserialize(SplinePlus splinePlus, string path) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to deserialize the data into. string path The file path containing the serialized spline data."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Branches.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Branches.html",
    "title": "Method Get_Branches | Spline Plus documentation",
    "keywords": "Method Get_Branches | Edit this page View Source Get_Branches(SplinePlus) Retrieves a dictionary containing the branches of a SplinePlus object. Declaration public static Dictionary<int, BranchModel> Get_Branches(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object from which to retrieve the branches. Returns Type Description Dictionary<int, BranchModel> A dictionary where the keys represent the branch keys and the values represent the corresponding BranchModel objects. Returns null if the input SplinePlus object is null."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Closest__To_MousePosition.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Closest__To_MousePosition.html",
    "title": "Method Get_Closest__To_MousePosition | Spline Plus documentation",
    "keywords": "Method Get_Closest__To_MousePosition | Edit this page View Source Get_Closest__To_MousePosition(SplinePlus) Finds the closest spline distance to the current mouse position on the screen. Declaration public static (float closestDistanceOnBranch, int closestBranchKey) Get_Closest__To_MousePosition(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus component that contains the branches and vertices. Returns Type Description (float closestDistanceOnBranch, int closestBranchKey) A tuple containing the closest branch distance of the closest vertex and the key of the closest branch."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Nodes.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Nodes.html",
    "title": "Method Get_Nodes | Spline Plus documentation",
    "keywords": "Method Get_Nodes | Edit this page View Source Get_Nodes(SplinePlus) Retrieves all nodes in a SplinePlus object. Declaration public static List<NodeModel> Get_Nodes(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object from which to retrieve nodes. Returns Type Description List<NodeModel> A list of NodeModel objects representing all nodes in the specified SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Reference_Axis.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Reference_Axis.html",
    "title": "Method Get_Reference_Axis | Spline Plus documentation",
    "keywords": "Method Get_Reference_Axis | Edit this page View Source Get_Reference_Axis(SplinePlus) Retrieves the reference axis of a SplinePlus object. Declaration public static RefAxis_Enum Get_Reference_Axis(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object from which to retrieve the reference axis. Returns Type Description RefAxis_Enum The reference axis of the specified SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Shared_Nodes.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Shared_Nodes.html",
    "title": "Method Get_Shared_Nodes | Spline Plus documentation",
    "keywords": "Method Get_Shared_Nodes | Edit this page View Source Get_Shared_Nodes(SplinePlus) Retrieves all sharedData nodes in a SplinePlus object. Declaration public static List<NodeModel> Get_Shared_Nodes(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object from which to retrieve sharedData nodes. Returns Type Description List<NodeModel> A list of NodeModel objects representing all sharedData nodes in the specified SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Smoothness.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_Smoothness.html",
    "title": "Method Get_Smoothness | Spline Plus documentation",
    "keywords": "Method Get_Smoothness | Edit this page View Source Get_Smoothness(SplinePlus) Retrieves the smoothness value of a SplinePlus object. Declaration public static int Get_Smoothness(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object from which to retrieve the smoothness value. Returns Type Description int The smoothness value of the specified SplinePlus object."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Get_SplineTransform.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Get_SplineTransform.html",
    "title": "Method Get_SplineTransform | Spline Plus documentation",
    "keywords": "Method Get_SplineTransform | Edit this page View Source Get_SplineTransform(SplinePlus, int, float) Calculates the transformation (position and rotation) along a branch of a SplinePlus object at a specified distance. Declaration public static SplineTransformModel Get_SplineTransform(SplinePlus splinePlus, int branchKey, float targetDist = 0) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the branch. int branchKey The branch key of the branch for which to calculate the transformation. float targetDist The target distance along the branch at which to calculate the transformation. Default is 0. Returns Type Description SplineTransformModel A SplineTransformModel object containing the calculated position and rotation. | Edit this page View Source Get_SplineTransform(SplinePlus, BranchModel, float) Declaration public static SplineTransformModel Get_SplineTransform(SplinePlus splinePlus, BranchModel branch, float targetDist = 0) Parameters Type Name Description SplinePlus splinePlus BranchModel branch float targetDist Returns Type Description SplineTransformModel"
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Merge.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Merge.html",
    "title": "Method Merge | Spline Plus documentation",
    "keywords": "Method Merge | Edit this page View Source Merge(SplinePlus, SplinePlus) Merges the spline branches from the source SplinePlus object into the target SplinePlus object. Declaration public static void Merge(SplinePlus source, SplinePlus target) Parameters Type Name Description SplinePlus source The source SplinePlus object from which to merge spline branches. SplinePlus target The target SplinePlus object into which the spline branches will be merged."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Select_Branch.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Select_Branch.html",
    "title": "Method Select_Branch | Spline Plus documentation",
    "keywords": "Method Select_Branch | Edit this page View Source Select_Branch(SplinePlus, int) Declaration public static void Select_Branch(SplinePlus splinePlus, int branchKey) Parameters Type Name Description SplinePlus splinePlus int branchKey"
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Select_Node.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Select_Node.html",
    "title": "Method Select_Node | Spline Plus documentation",
    "keywords": "Method Select_Node | Edit this page View Source Select_Node(SplinePlus, NodeModel) Declaration public static void Select_Node(SplinePlus splinePlus, NodeModel node) Parameters Type Name Description SplinePlus splinePlus NodeModel node"
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Serializable.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Serializable.html",
    "title": "Method Serializable | Spline Plus documentation",
    "keywords": "Method Serializable | Edit this page View Source Serializable(string, SplinePlus) Serializes the data of a SplinePlus object and saves it to a file. Declaration public static void Serializable(string path, SplinePlus splinePlus) Parameters Type Name Description string path The path where the serialized data will be saved. SplinePlus splinePlus The SplinePlus object whose data will be serialized."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Set_Reference_Axis.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Set_Reference_Axis.html",
    "title": "Method Set_Reference_Axis | Spline Plus documentation",
    "keywords": "Method Set_Reference_Axis | Edit this page View Source Set_Reference_Axis(SplinePlus, RefAxis_Enum) Sets the reference axis for a SplinePlus object. Declaration public static void Set_Reference_Axis(SplinePlus splinePlus, RefAxis_Enum axis) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object for which to set the reference axis. RefAxis_Enum axis The new reference axis to set."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Set_Smoothness.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Set_Smoothness.html",
    "title": "Method Set_Smoothness | Spline Plus documentation",
    "keywords": "Method Set_Smoothness | Edit this page View Source Set_Smoothness(SplinePlus, int) Sets the smoothness value for a SplinePlus object. Declaration public static void Set_Smoothness(SplinePlus splinePlus, int smoothness) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object for which to set the smoothness value. int smoothness The new smoothness value to set."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.SnapToGrid.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.SnapToGrid.html",
    "title": "Method SnapToGrid | Spline Plus documentation",
    "keywords": "Method SnapToGrid | Edit this page View Source SnapToGrid(SplinePlus, Camera) Snaps the nodes of a SplinePlus object to a grid based on the camera orientation. Declaration public static void SnapToGrid(SplinePlus splinePlus, Camera cam) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object whose nodes will be snapped to the grid. Camera cam The camera used to determine the grid orientation."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Update.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Update.html",
    "title": "Method Update | Spline Plus documentation",
    "keywords": "Method Update | Edit this page View Source Update(SplinePlus) Updates the SplinePlus object by updating each branch and invoking the SplinePlusUpdate event. Declaration public static void Update(SplinePlus splinePlus) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object to be updated."
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.Weld.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.Weld.html",
    "title": "Method Weld | Spline Plus documentation",
    "keywords": "Method Weld | Edit this page View Source Weld(SplinePlus, float) Welds nodes in a SplinePlus object that are close to each other within a specified distance. Declaration public static void Weld(SplinePlus splinePlus, float weldDistance) Parameters Type Name Description SplinePlus splinePlus The SplinePlus object containing the nodes to be welded. float weldDistance"
  },
  "api/ElseForty.splineplus.api.SplinePlusAPI.html": {
    "href": "api/ElseForty.splineplus.api.SplinePlusAPI.html",
    "title": "Class SplinePlusAPI | Spline Plus documentation",
    "keywords": "Class SplinePlusAPI Provides a set of methods for manipulating and interacting with SplinePlus objects, including adding modifiers, updating, creating, retrieving branches and nodes, setting smoothness and reference axis, welding nodes, serializing, and deserializing data. Inheritance object SplinePlusAPI Namespace: ElseForty.splineplus.api Assembly: .dll Syntax public class SplinePlusAPI Methods Name Description Clear_Selection(SplinePlus) Create(Vector3) Creates a new SplinePlus object at the specified position. Deserialize(SplinePlus, string) Deserializes the spline data from the specified file path and applies it to the given SplinePlus object. Get_Branches(SplinePlus) Retrieves a dictionary containing the branches of a SplinePlus object. Get_Closest__To_MousePosition(SplinePlus) Finds the closest spline distance to the current mouse position on the screen. Get_Nodes(SplinePlus) Retrieves all nodes in a SplinePlus object. Get_Reference_Axis(SplinePlus) Retrieves the reference axis of a SplinePlus object. Get_Shared_Nodes(SplinePlus) Retrieves all sharedData nodes in a SplinePlus object. Get_Smoothness(SplinePlus) Retrieves the smoothness value of a SplinePlus object. Get_SplineTransform(SplinePlus, BranchModel, float) Get_SplineTransform(SplinePlus, int, float) Calculates the transformation (position and rotation) along a branch of a SplinePlus object at a specified distance. Merge(SplinePlus, SplinePlus) Merges the spline branches from the source SplinePlus object into the target SplinePlus object. Select_Branch(SplinePlus, int) Select_Node(SplinePlus, NodeModel) Serializable(string, SplinePlus) Serializes the data of a SplinePlus object and saves it to a file. Set_Reference_Axis(SplinePlus, RefAxis_Enum) Sets the reference axis for a SplinePlus object. Set_Smoothness(SplinePlus, int) Sets the smoothness value for a SplinePlus object. SnapToGrid(SplinePlus, Camera) Snaps the nodes of a SplinePlus object to a grid based on the camera orientation. Update(SplinePlus) Updates the SplinePlus object by updating each branch and invoking the SplinePlusUpdate event. Weld(SplinePlus, float) Welds nodes in a SplinePlus object that are close to each other within a specified distance."
  },
  "api/ElseForty.splineplus.api.html": {
    "href": "api/ElseForty.splineplus.api.html",
    "title": "Namespace ElseForty.splineplus.api | Spline Plus documentation",
    "keywords": "Namespace ElseForty.splineplus.api Classes BranchAPI Provides methods for interacting with branches of a SplinePlus object. NodeAPI Provides methods for manipulating nodes in a SplinePlus object, including retrieving selected nodes, creating new nodes, updating node positions, setting node positions, and chamfering nodes. ProjectionAPI Provides methods for updating the positions of vertices and nodes along spline branches by raycasting onto surfaces below, retrieving and setting projection properties such as raycast length, offset, debug ray visibility, and preservation of normals. SplinePlusAPI Provides a set of methods for manipulating and interacting with SplinePlus objects, including adding modifiers, updating, creating, retrieving branches and nodes, setting smoothness and reference axis, welding nodes, serializing, and deserializing data."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to Spline Plus R Documentation | Spline Plus documentation",
    "keywords": "Welcome to Spline Plus R Documentation Welcome to the official Spline Plus R documentation. Here, you will find comprehensive resources to effectively integrate and utilize Spline Plus in your projects. Whether you are just starting out or seeking advanced techniques, this documentation provides step-by-step tutorials and detailed API references tailored to your needs. Spline Plus R Modifiers Animation Basic Followers Group Followers Spline Path Finding Mesh Mesh Deform Extrude Mesh Tube Mesh Plane Mesh"
  }
}