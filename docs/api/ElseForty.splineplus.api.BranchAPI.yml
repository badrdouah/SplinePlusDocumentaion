### YamlMime:ManagedReference
items:
- uid: ElseForty.splineplus.api.BranchAPI
  commentId: T:ElseForty.splineplus.api.BranchAPI
  id: BranchAPI
  parent: ElseForty.splineplus.api
  children:
  - ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index(SplinePlus,System.Int32,NodeModel,System.Int32,System.Boolean,System.Boolean)
  - ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  - ElseForty.splineplus.api.BranchAPI.Add_Node_End(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  - ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index(SplinePlus,System.Int32,NodeModel[],System.Int32,System.Boolean,System.Boolean)
  - ElseForty.splineplus.api.BranchAPI.BreakAt(SplinePlus,NodeModel)
  - ElseForty.splineplus.api.BranchAPI.Create(SplinePlus)
  - ElseForty.splineplus.api.BranchAPI.Delete(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Diffuse(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.FlipHandles(SplinePlus,System.Int32,BranchDirection_Enum)
  - ElseForty.splineplus.api.BranchAPI.Get_Direction(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Get_Length(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Get_Nodes(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Get_Normals(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Get_Tangents(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Get_Vertices(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.IsReversed(SplinePlus,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Merge(SplinePlus,System.Int32,System.Int32)
  - ElseForty.splineplus.api.BranchAPI.Selected(SplinePlus)
  - ElseForty.splineplus.api.BranchAPI.Set_Direction(SplinePlus,System.Int32,BranchDirection_Enum)
  - ElseForty.splineplus.api.BranchAPI.Update(SplinePlus,System.Int32)
  langs:
  - csharp
  - vb
  name: BranchAPI
  nameWithType: BranchAPI
  fullName: ElseForty.splineplus.api.BranchAPI
  type: Class
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: BranchAPI
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 13
  namespace: ElseForty.splineplus.api
  summary: Provides methods for interacting with branches of a SplinePlus object.
  example: []
  syntax:
    content: public class BranchAPI
    content.vb: Public Class BranchAPI
  inheritance:
  - System.Object
- uid: ElseForty.splineplus.api.BranchAPI.Update(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Update(SplinePlus,System.Int32)
  id: Update(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Update(SplinePlus, int)
  nameWithType: BranchAPI.Update(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Update(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Update
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 25
  namespace: ElseForty.splineplus.api
  summary: Updates the geometry and properties of a specific branch of the spline.
  example: []
  syntax:
    content: public static void Update(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch to update.
    content.vb: Public Shared Sub Update(splinePlus As SplinePlus, branchKey As Integer)
  overload: ElseForty.splineplus.api.BranchAPI.Update*
  nameWithType.vb: BranchAPI.Update(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Update(SplinePlus, Integer)
  name.vb: Update(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Selected(SplinePlus)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Selected(SplinePlus)
  id: Selected(SplinePlus)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Selected(SplinePlus)
  nameWithType: BranchAPI.Selected(SplinePlus)
  fullName: ElseForty.splineplus.api.BranchAPI.Selected(SplinePlus)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Selected
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 176
  namespace: ElseForty.splineplus.api
  summary: >-
    Retrieves the currently selected branch from the specified SplinePlus object.

    If no branch is selected, creates a new branch and sets it as selected.
  example: []
  syntax:
    content: public static BranchModel Selected(SplinePlus splinePlus)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    return:
      type: Global.BranchModel
      description: The currently selected branch, or null if no branch is found.
    content.vb: Public Shared Function Selected(splinePlus As SplinePlus) As BranchModel
  overload: ElseForty.splineplus.api.BranchAPI.Selected*
- uid: ElseForty.splineplus.api.BranchAPI.Create(SplinePlus)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Create(SplinePlus)
  id: Create(SplinePlus)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Create(SplinePlus)
  nameWithType: BranchAPI.Create(SplinePlus)
  fullName: ElseForty.splineplus.api.BranchAPI.Create(SplinePlus)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Create
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 194
  namespace: ElseForty.splineplus.api
  summary: Creates a new branch in the specified SplinePlus object.
  example: []
  syntax:
    content: public static int Create(SplinePlus splinePlus)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object to create the branch in.
    return:
      type: System.Int32
      description: The key of the newly created branch.
    content.vb: Public Shared Function Create(splinePlus As SplinePlus) As Integer
  overload: ElseForty.splineplus.api.BranchAPI.Create*
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  id: Add_Node_Beginning(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Add_Node_Beginning(SplinePlus, int, NodeModel, bool, bool)
  nameWithType: BranchAPI.Add_Node_Beginning(SplinePlus, int, NodeModel, bool, bool)
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning(SplinePlus, int, NodeModel, bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Add_Node_Beginning
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 210
  namespace: ElseForty.splineplus.api
  summary: Adds a new node at the beginning of the specified branch in the SplinePlus object.
  example: []
  syntax:
    content: public static void Add_Node_Beginning(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, bool doSelect = true, bool autoSmoothHandles = true)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch to which the node will be added.
    - id: nodeToAdd
      type: Global.NodeModel
      description: The NodeModel representing the node to add.
    - id: doSelect
      type: System.Boolean
    - id: autoSmoothHandles
      type: System.Boolean
    content.vb: Public Shared Sub Add_Node_Beginning(splinePlus As SplinePlus, branchKey As Integer, nodeToAdd As NodeModel, doSelect As Boolean = True, autoSmoothHandles As Boolean = True)
  overload: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning*
  nameWithType.vb: BranchAPI.Add_Node_Beginning(SplinePlus, Integer, NodeModel, Boolean, Boolean)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning(SplinePlus, Integer, NodeModel, Boolean, Boolean)
  name.vb: Add_Node_Beginning(SplinePlus, Integer, NodeModel, Boolean, Boolean)
- uid: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index(SplinePlus,System.Int32,NodeModel[],System.Int32,System.Boolean,System.Boolean)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index(SplinePlus,System.Int32,NodeModel[],System.Int32,System.Boolean,System.Boolean)
  id: Add_Nodes_At_Index(SplinePlus,System.Int32,NodeModel[],System.Int32,System.Boolean,System.Boolean)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Add_Nodes_At_Index(SplinePlus, int, NodeModel[], int, bool, bool)
  nameWithType: BranchAPI.Add_Nodes_At_Index(SplinePlus, int, NodeModel[], int, bool, bool)
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index(SplinePlus, int, NodeModel[], int, bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Add_Nodes_At_Index
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 252
  namespace: ElseForty.splineplus.api
  summary: Adds an array of nodes at a specified index in a branch of the SplinePlus object.
  remarks: >-
    If the branchKey does not exist within the SplinePlus object, a new branch will be created.

    Nodes that are already present in the branch will be ignored.
  example:
  - >-
    Here is an example of how to use Add_Nodes_At_Index:

    <pre><code class="lang-csharp">NodeModel[] nodes = new NodeModel[] { new NodeModel(), new NodeModel() };

    SplinePlus mySplinePlus = new SplinePlus();

    int myBranchKey = 0;

    int insertIndex = 1;

    Add_Nodes_At_Index(mySplinePlus, myBranchKey, nodes, insertIndex);</code></pre>
  syntax:
    content: public static void Add_Nodes_At_Index(SplinePlus splinePlus, int branchKey, NodeModel[] nodesToAdd, int index, bool doSelect = true, bool autoSmoothHandles = true)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object to which nodes will be added.
    - id: branchKey
      type: System.Int32
      description: The key of the branch where nodes will be added.
    - id: nodesToAdd
      type: Global.NodeModel[]
      description: The array of NodeModel objects to add to the branch.
    - id: index
      type: System.Int32
      description: The index at which the nodes should be inserted.
    - id: doSelect
      type: System.Boolean
      description: (Optional) If set to true, the last node added will be selected. Default is true.
    - id: autoSmoothHandles
      type: System.Boolean
      description: (Optional) If set to true, handles for the nodes will be automatically smoothed. Default is true.
    content.vb: Public Shared Sub Add_Nodes_At_Index(splinePlus As SplinePlus, branchKey As Integer, nodesToAdd As NodeModel(), index As Integer, doSelect As Boolean = True, autoSmoothHandles As Boolean = True)
  overload: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index*
  nameWithType.vb: BranchAPI.Add_Nodes_At_Index(SplinePlus, Integer, NodeModel(), Integer, Boolean, Boolean)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index(SplinePlus, Integer, NodeModel(), Integer, Boolean, Boolean)
  name.vb: Add_Nodes_At_Index(SplinePlus, Integer, NodeModel(), Integer, Boolean, Boolean)
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_End(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Add_Node_End(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  id: Add_Node_End(SplinePlus,System.Int32,NodeModel,System.Boolean,System.Boolean)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Add_Node_End(SplinePlus, int, NodeModel, bool, bool)
  nameWithType: BranchAPI.Add_Node_End(SplinePlus, int, NodeModel, bool, bool)
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_End(SplinePlus, int, NodeModel, bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Add_Node_End
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 286
  namespace: ElseForty.splineplus.api
  summary: Adds a new node at the end of the specified branch in the SplinePlus object.
  example: []
  syntax:
    content: public static void Add_Node_End(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, bool doSelect = true, bool autoSmoothHandles = true)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch to which the node will be added.
    - id: nodeToAdd
      type: Global.NodeModel
      description: The NodeModel representing the node to add.
    - id: doSelect
      type: System.Boolean
    - id: autoSmoothHandles
      type: System.Boolean
    content.vb: Public Shared Sub Add_Node_End(splinePlus As SplinePlus, branchKey As Integer, nodeToAdd As NodeModel, doSelect As Boolean = True, autoSmoothHandles As Boolean = True)
  overload: ElseForty.splineplus.api.BranchAPI.Add_Node_End*
  nameWithType.vb: BranchAPI.Add_Node_End(SplinePlus, Integer, NodeModel, Boolean, Boolean)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Add_Node_End(SplinePlus, Integer, NodeModel, Boolean, Boolean)
  name.vb: Add_Node_End(SplinePlus, Integer, NodeModel, Boolean, Boolean)
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index(SplinePlus,System.Int32,NodeModel,System.Int32,System.Boolean,System.Boolean)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index(SplinePlus,System.Int32,NodeModel,System.Int32,System.Boolean,System.Boolean)
  id: Add_Node_At_Index(SplinePlus,System.Int32,NodeModel,System.Int32,System.Boolean,System.Boolean)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Add_Node_At_Index(SplinePlus, int, NodeModel, int, bool, bool)
  nameWithType: BranchAPI.Add_Node_At_Index(SplinePlus, int, NodeModel, int, bool, bool)
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index(SplinePlus, int, NodeModel, int, bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Add_Node_At_Index
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 316
  namespace: ElseForty.splineplus.api
  summary: Adds a new node at the specified index within the node list of the specified branch in the SplinePlus object.
  example: []
  syntax:
    content: public static void Add_Node_At_Index(SplinePlus splinePlus, int branchKey, NodeModel nodeToAdd, int index, bool doSelect = true, bool autoSmoothHandles = true)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch to which the node will be added.
    - id: nodeToAdd
      type: Global.NodeModel
      description: The NodeModel representing the node to add.
    - id: index
      type: System.Int32
      description: The index at which the node will be inserted within the branch's node list.
    - id: doSelect
      type: System.Boolean
    - id: autoSmoothHandles
      type: System.Boolean
    content.vb: Public Shared Sub Add_Node_At_Index(splinePlus As SplinePlus, branchKey As Integer, nodeToAdd As NodeModel, index As Integer, doSelect As Boolean = True, autoSmoothHandles As Boolean = True)
  overload: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index*
  nameWithType.vb: BranchAPI.Add_Node_At_Index(SplinePlus, Integer, NodeModel, Integer, Boolean, Boolean)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index(SplinePlus, Integer, NodeModel, Integer, Boolean, Boolean)
  name.vb: Add_Node_At_Index(SplinePlus, Integer, NodeModel, Integer, Boolean, Boolean)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Nodes(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Nodes(SplinePlus,System.Int32)
  id: Get_Nodes(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Nodes(SplinePlus, int)
  nameWithType: BranchAPI.Get_Nodes(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Nodes(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Nodes
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 344
  namespace: ElseForty.splineplus.api
  summary: Retrieves the list of nodes belonging to the specified branch in the SplinePlus object.
  example: []
  syntax:
    content: public static List<NodeModel> Get_Nodes(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch whose nodes will be retrieved.
    return:
      type: System.Collections.Generic.List{NodeModel}
      description: The list of NodeModel objects representing the nodes of the specified branch, or null if the branch does not exist.
    content.vb: Public Shared Function Get_Nodes(splinePlus As SplinePlus, branchKey As Integer) As List(Of NodeModel)
  overload: ElseForty.splineplus.api.BranchAPI.Get_Nodes*
  nameWithType.vb: BranchAPI.Get_Nodes(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Nodes(SplinePlus, Integer)
  name.vb: Get_Nodes(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Delete(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Delete(SplinePlus,System.Int32)
  id: Delete(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Delete(SplinePlus, int)
  nameWithType: BranchAPI.Delete(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Delete(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Delete
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 357
  namespace: ElseForty.splineplus.api
  summary: Deletes the specified branch from the SplinePlus object.
  example: []
  syntax:
    content: public static void Delete(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: branchKey
      type: System.Int32
      description: The key identifying the branch to be deleted.
    content.vb: Public Shared Sub Delete(splinePlus As SplinePlus, branchKey As Integer)
  overload: ElseForty.splineplus.api.BranchAPI.Delete*
  nameWithType.vb: BranchAPI.Delete(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Delete(SplinePlus, Integer)
  name.vb: Delete(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.BreakAt(SplinePlus,NodeModel)
  commentId: M:ElseForty.splineplus.api.BranchAPI.BreakAt(SplinePlus,NodeModel)
  id: BreakAt(SplinePlus,NodeModel)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: BreakAt(SplinePlus, NodeModel)
  nameWithType: BranchAPI.BreakAt(SplinePlus, NodeModel)
  fullName: ElseForty.splineplus.api.BranchAPI.BreakAt(SplinePlus, NodeModel)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: BreakAt
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 388
  namespace: ElseForty.splineplus.api
  summary: Breaks a spline branch at the specified node, creating a new branch starting from that node.
  example: []
  syntax:
    content: public static void BreakAt(SplinePlus splinePlus, NodeModel node)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the spline.
    - id: node
      type: Global.NodeModel
      description: The node at which to break the spline branch.
    content.vb: Public Shared Sub BreakAt(splinePlus As SplinePlus, node As NodeModel)
  overload: ElseForty.splineplus.api.BranchAPI.BreakAt*
- uid: ElseForty.splineplus.api.BranchAPI.IsReversed(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.IsReversed(SplinePlus,System.Int32)
  id: IsReversed(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: IsReversed(SplinePlus, int)
  nameWithType: BranchAPI.IsReversed(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.IsReversed(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: IsReversed
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 422
  namespace: ElseForty.splineplus.api
  summary: Reverses the order of nodes in a specific branch of a SplinePlus object and flips the handles for each node.
  example: []
  syntax:
    content: public static void IsReversed(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch to be reversed.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch to be reversed.
    content.vb: Public Shared Sub IsReversed(splinePlus As SplinePlus, branchKey As Integer)
  overload: ElseForty.splineplus.api.BranchAPI.IsReversed*
  nameWithType.vb: BranchAPI.IsReversed(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.IsReversed(SplinePlus, Integer)
  name.vb: IsReversed(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Diffuse(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Diffuse(SplinePlus,System.Int32)
  id: Diffuse(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Diffuse(SplinePlus, int)
  nameWithType: BranchAPI.Diffuse(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Diffuse(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Diffuse
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 441
  namespace: ElseForty.splineplus.api
  summary: Diffuses shared nodes in a specific branch of a SplinePlus object.
  example: []
  syntax:
    content: public static void Diffuse(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch with shared nodes to be diffused.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch to be processed.
    content.vb: Public Shared Sub Diffuse(splinePlus As SplinePlus, branchKey As Integer)
  overload: ElseForty.splineplus.api.BranchAPI.Diffuse*
  nameWithType.vb: BranchAPI.Diffuse(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Diffuse(SplinePlus, Integer)
  name.vb: Diffuse(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Merge(SplinePlus,System.Int32,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Merge(SplinePlus,System.Int32,System.Int32)
  id: Merge(SplinePlus,System.Int32,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Merge(SplinePlus, int, int)
  nameWithType: BranchAPI.Merge(SplinePlus, int, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Merge(SplinePlus, int, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Merge
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 472
  namespace: ElseForty.splineplus.api
  summary: Merges two branches of a SplinePlus object into one branch.
  example: []
  syntax:
    content: public static int Merge(SplinePlus splinePlus, int branchKey1, int branchKey2)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branches to be merged.
    - id: branchKey1
      type: System.Int32
      description: An integer representing the key of the first branch to be merged.
    - id: branchKey2
      type: System.Int32
      description: An integer representing the key of the second branch to be merged.
    return:
      type: System.Int32
      description: An integer representing the key of the merged branch.
    content.vb: Public Shared Function Merge(splinePlus As SplinePlus, branchKey1 As Integer, branchKey2 As Integer) As Integer
  overload: ElseForty.splineplus.api.BranchAPI.Merge*
  nameWithType.vb: BranchAPI.Merge(SplinePlus, Integer, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Merge(SplinePlus, Integer, Integer)
  name.vb: Merge(SplinePlus, Integer, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Length(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Length(SplinePlus,System.Int32)
  id: Get_Length(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Length(SplinePlus, int)
  nameWithType: BranchAPI.Get_Length(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Length(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Length
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 516
  namespace: ElseForty.splineplus.api
  summary: Calculates and returns the length of a branch in a SplinePlus object.
  example: []
  syntax:
    content: public static float Get_Length(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch.
    return:
      type: System.Single
      description: The length of the specified branch as a floating-point number.
    content.vb: Public Shared Function Get_Length(splinePlus As SplinePlus, branchKey As Integer) As Single
  overload: ElseForty.splineplus.api.BranchAPI.Get_Length*
  nameWithType.vb: BranchAPI.Get_Length(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Length(SplinePlus, Integer)
  name.vb: Get_Length(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Vertices(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Vertices(SplinePlus,System.Int32)
  id: Get_Vertices(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Vertices(SplinePlus, int)
  nameWithType: BranchAPI.Get_Vertices(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Vertices(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Vertices
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 533
  namespace: ElseForty.splineplus.api
  summary: Retrieves the vertices of a branch in a SplinePlus object.
  example: []
  syntax:
    content: public static List<Vector3> Get_Vertices(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch.
    return:
      type: System.Collections.Generic.List{Vector3}
      description: >-
        A list of Vector3 objects representing the vertices of the specified branch.

        Returns null if the branch with the specified key is not found.
    content.vb: Public Shared Function Get_Vertices(splinePlus As SplinePlus, branchKey As Integer) As List(Of Vector3)
  overload: ElseForty.splineplus.api.BranchAPI.Get_Vertices*
  nameWithType.vb: BranchAPI.Get_Vertices(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Vertices(SplinePlus, Integer)
  name.vb: Get_Vertices(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Normals(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Normals(SplinePlus,System.Int32)
  id: Get_Normals(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Normals(SplinePlus, int)
  nameWithType: BranchAPI.Get_Normals(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Normals(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Normals
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 551
  namespace: ElseForty.splineplus.api
  summary: Retrieves the normals of a branch in a SplinePlus object.
  example: []
  syntax:
    content: public static List<Vector3> Get_Normals(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch.
    return:
      type: System.Collections.Generic.List{Vector3}
      description: >-
        A list of Vector3 objects representing the normals of the specified branch.

        Returns null if the branch with the specified key is not found.
    content.vb: Public Shared Function Get_Normals(splinePlus As SplinePlus, branchKey As Integer) As List(Of Vector3)
  overload: ElseForty.splineplus.api.BranchAPI.Get_Normals*
  nameWithType.vb: BranchAPI.Get_Normals(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Normals(SplinePlus, Integer)
  name.vb: Get_Normals(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Tangents(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Tangents(SplinePlus,System.Int32)
  id: Get_Tangents(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Tangents(SplinePlus, int)
  nameWithType: BranchAPI.Get_Tangents(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Tangents(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Tangents
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 569
  namespace: ElseForty.splineplus.api
  summary: Retrieves the tangents of a branch in a SplinePlus object.
  example: []
  syntax:
    content: public static List<Vector3> Get_Tangents(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
      description: The SplinePlus object containing the branch.
    - id: branchKey
      type: System.Int32
      description: An integer representing the key of the branch.
    return:
      type: System.Collections.Generic.List{Vector3}
      description: >-
        A list of Vector3 objects representing the tangents of the specified branch.

        Returns null if the branch with the specified key is not found.
    content.vb: Public Shared Function Get_Tangents(splinePlus As SplinePlus, branchKey As Integer) As List(Of Vector3)
  overload: ElseForty.splineplus.api.BranchAPI.Get_Tangents*
  nameWithType.vb: BranchAPI.Get_Tangents(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Tangents(SplinePlus, Integer)
  name.vb: Get_Tangents(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.Set_Direction(SplinePlus,System.Int32,BranchDirection_Enum)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Set_Direction(SplinePlus,System.Int32,BranchDirection_Enum)
  id: Set_Direction(SplinePlus,System.Int32,BranchDirection_Enum)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Set_Direction(SplinePlus, int, BranchDirection_Enum)
  nameWithType: BranchAPI.Set_Direction(SplinePlus, int, BranchDirection_Enum)
  fullName: ElseForty.splineplus.api.BranchAPI.Set_Direction(SplinePlus, int, BranchDirection_Enum)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Set_Direction
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 577
  namespace: ElseForty.splineplus.api
  syntax:
    content: public static void Set_Direction(SplinePlus splinePlus, int branchKey, BranchDirection_Enum branchDirection)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
    - id: branchKey
      type: System.Int32
    - id: branchDirection
      type: Global.BranchDirection_Enum
    content.vb: Public Shared Sub Set_Direction(splinePlus As SplinePlus, branchKey As Integer, branchDirection As BranchDirection_Enum)
  overload: ElseForty.splineplus.api.BranchAPI.Set_Direction*
  nameWithType.vb: BranchAPI.Set_Direction(SplinePlus, Integer, BranchDirection_Enum)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Set_Direction(SplinePlus, Integer, BranchDirection_Enum)
  name.vb: Set_Direction(SplinePlus, Integer, BranchDirection_Enum)
- uid: ElseForty.splineplus.api.BranchAPI.Get_Direction(SplinePlus,System.Int32)
  commentId: M:ElseForty.splineplus.api.BranchAPI.Get_Direction(SplinePlus,System.Int32)
  id: Get_Direction(SplinePlus,System.Int32)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: Get_Direction(SplinePlus, int)
  nameWithType: BranchAPI.Get_Direction(SplinePlus, int)
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Direction(SplinePlus, int)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: Get_Direction
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 584
  namespace: ElseForty.splineplus.api
  syntax:
    content: public static BranchDirection_Enum Get_Direction(SplinePlus splinePlus, int branchKey)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
    - id: branchKey
      type: System.Int32
    return:
      type: Global.BranchDirection_Enum
    content.vb: Public Shared Function Get_Direction(splinePlus As SplinePlus, branchKey As Integer) As BranchDirection_Enum
  overload: ElseForty.splineplus.api.BranchAPI.Get_Direction*
  nameWithType.vb: BranchAPI.Get_Direction(SplinePlus, Integer)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.Get_Direction(SplinePlus, Integer)
  name.vb: Get_Direction(SplinePlus, Integer)
- uid: ElseForty.splineplus.api.BranchAPI.FlipHandles(SplinePlus,System.Int32,BranchDirection_Enum)
  commentId: M:ElseForty.splineplus.api.BranchAPI.FlipHandles(SplinePlus,System.Int32,BranchDirection_Enum)
  id: FlipHandles(SplinePlus,System.Int32,BranchDirection_Enum)
  parent: ElseForty.splineplus.api.BranchAPI
  langs:
  - csharp
  - vb
  name: FlipHandles(SplinePlus, int, BranchDirection_Enum)
  nameWithType: BranchAPI.FlipHandles(SplinePlus, int, BranchDirection_Enum)
  fullName: ElseForty.splineplus.api.BranchAPI.FlipHandles(SplinePlus, int, BranchDirection_Enum)
  type: Method
  source:
    remote:
      path: Assets/Runtime/SplinePlus/API/BranchAPI.cs
      branch: main
      repo: https://github.com/badrdouah/SplinePlus.git
    id: FlipHandles
    path: ../Assets/Runtime/SplinePlus/API/BranchAPI.cs
    startLine: 591
  namespace: ElseForty.splineplus.api
  syntax:
    content: public static void FlipHandles(SplinePlus splinePlus, int branchKey, BranchDirection_Enum branchDirection)
    parameters:
    - id: splinePlus
      type: Global.SplinePlus
    - id: branchKey
      type: System.Int32
    - id: branchDirection
      type: Global.BranchDirection_Enum
    content.vb: Public Shared Sub FlipHandles(splinePlus As SplinePlus, branchKey As Integer, branchDirection As BranchDirection_Enum)
  overload: ElseForty.splineplus.api.BranchAPI.FlipHandles*
  nameWithType.vb: BranchAPI.FlipHandles(SplinePlus, Integer, BranchDirection_Enum)
  fullName.vb: ElseForty.splineplus.api.BranchAPI.FlipHandles(SplinePlus, Integer, BranchDirection_Enum)
  name.vb: FlipHandles(SplinePlus, Integer, BranchDirection_Enum)
references:
- uid: ElseForty.splineplus.api
  commentId: N:ElseForty.splineplus.api
  href: ElseForty.html
  name: ElseForty.splineplus.api
  nameWithType: ElseForty.splineplus.api
  fullName: ElseForty.splineplus.api
  spec.csharp:
  - uid: ElseForty
    name: ElseForty
    href: ElseForty.html
  - name: .
  - uid: ElseForty.splineplus
    name: splineplus
    href: ElseForty.splineplus.html
  - name: .
  - uid: ElseForty.splineplus.api
    name: api
    href: ElseForty.splineplus.api.html
  spec.vb:
  - uid: ElseForty
    name: ElseForty
    href: ElseForty.html
  - name: .
  - uid: ElseForty.splineplus
    name: splineplus
    href: ElseForty.splineplus.html
  - name: .
  - uid: ElseForty.splineplus.api
    name: api
    href: ElseForty.splineplus.api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ElseForty.splineplus.api.BranchAPI.Update*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Update
  href: ElseForty.splineplus.api.BranchAPI.Update.html#ElseForty_splineplus_api_BranchAPI_Update_SplinePlus_System_Int32_
  name: Update
  nameWithType: BranchAPI.Update
  fullName: ElseForty.splineplus.api.BranchAPI.Update
- uid: Global.SplinePlus
  isExternal: true
  name: SplinePlus
  nameWithType: SplinePlus
  fullName: SplinePlus
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ElseForty.splineplus.api.BranchAPI.Selected*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Selected
  href: ElseForty.splineplus.api.BranchAPI.Selected.html#ElseForty_splineplus_api_BranchAPI_Selected_SplinePlus_
  name: Selected
  nameWithType: BranchAPI.Selected
  fullName: ElseForty.splineplus.api.BranchAPI.Selected
- uid: Global.BranchModel
  isExternal: true
  name: BranchModel
  nameWithType: BranchModel
  fullName: BranchModel
- uid: ElseForty.splineplus.api.BranchAPI.Create*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Create
  href: ElseForty.splineplus.api.BranchAPI.Create.html#ElseForty_splineplus_api_BranchAPI_Create_SplinePlus_
  name: Create
  nameWithType: BranchAPI.Create
  fullName: ElseForty.splineplus.api.BranchAPI.Create
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning
  href: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning.html#ElseForty_splineplus_api_BranchAPI_Add_Node_Beginning_SplinePlus_System_Int32_NodeModel_System_Boolean_System_Boolean_
  name: Add_Node_Beginning
  nameWithType: BranchAPI.Add_Node_Beginning
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_Beginning
- uid: Global.NodeModel
  isExternal: true
  name: NodeModel
  nameWithType: NodeModel
  fullName: NodeModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index
  href: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index.html#ElseForty_splineplus_api_BranchAPI_Add_Nodes_At_Index_SplinePlus_System_Int32_NodeModel___System_Int32_System_Boolean_System_Boolean_
  name: Add_Nodes_At_Index
  nameWithType: BranchAPI.Add_Nodes_At_Index
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Nodes_At_Index
- uid: Global.NodeModel[]
  isExternal: true
  name: NodeModel[]
  nameWithType: NodeModel[]
  fullName: NodeModel[]
  nameWithType.vb: NodeModel()
  fullName.vb: NodeModel()
  name.vb: NodeModel()
  spec.csharp:
  - uid: Global.NodeModel
    name: NodeModel
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.NodeModel
    name: NodeModel
    isExternal: true
  - name: (
  - name: )
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_End*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Add_Node_End
  href: ElseForty.splineplus.api.BranchAPI.Add_Node_End.html#ElseForty_splineplus_api_BranchAPI_Add_Node_End_SplinePlus_System_Int32_NodeModel_System_Boolean_System_Boolean_
  name: Add_Node_End
  nameWithType: BranchAPI.Add_Node_End
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_End
- uid: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index
  href: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index.html#ElseForty_splineplus_api_BranchAPI_Add_Node_At_Index_SplinePlus_System_Int32_NodeModel_System_Int32_System_Boolean_System_Boolean_
  name: Add_Node_At_Index
  nameWithType: BranchAPI.Add_Node_At_Index
  fullName: ElseForty.splineplus.api.BranchAPI.Add_Node_At_Index
- uid: ElseForty.splineplus.api.BranchAPI.Get_Nodes*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Nodes
  href: ElseForty.splineplus.api.BranchAPI.Get_Nodes.html#ElseForty_splineplus_api_BranchAPI_Get_Nodes_SplinePlus_System_Int32_
  name: Get_Nodes
  nameWithType: BranchAPI.Get_Nodes
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Nodes
- uid: System.Collections.Generic.List{NodeModel}
  commentId: T:System.Collections.Generic.List{NodeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<NodeModel>
  nameWithType: List<NodeModel>
  fullName: System.Collections.Generic.List<NodeModel>
  nameWithType.vb: List(Of NodeModel)
  fullName.vb: System.Collections.Generic.List(Of NodeModel)
  name.vb: List(Of NodeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.NodeModel
    name: NodeModel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.NodeModel
    name: NodeModel
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ElseForty.splineplus.api.BranchAPI.Delete*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Delete
  href: ElseForty.splineplus.api.BranchAPI.Delete.html#ElseForty_splineplus_api_BranchAPI_Delete_SplinePlus_System_Int32_
  name: Delete
  nameWithType: BranchAPI.Delete
  fullName: ElseForty.splineplus.api.BranchAPI.Delete
- uid: ElseForty.splineplus.api.BranchAPI.BreakAt*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.BreakAt
  href: ElseForty.splineplus.api.BranchAPI.BreakAt.html#ElseForty_splineplus_api_BranchAPI_BreakAt_SplinePlus_NodeModel_
  name: BreakAt
  nameWithType: BranchAPI.BreakAt
  fullName: ElseForty.splineplus.api.BranchAPI.BreakAt
- uid: ElseForty.splineplus.api.BranchAPI.IsReversed*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.IsReversed
  href: ElseForty.splineplus.api.BranchAPI.IsReversed.html#ElseForty_splineplus_api_BranchAPI_IsReversed_SplinePlus_System_Int32_
  name: IsReversed
  nameWithType: BranchAPI.IsReversed
  fullName: ElseForty.splineplus.api.BranchAPI.IsReversed
- uid: ElseForty.splineplus.api.BranchAPI.Diffuse*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Diffuse
  href: ElseForty.splineplus.api.BranchAPI.Diffuse.html#ElseForty_splineplus_api_BranchAPI_Diffuse_SplinePlus_System_Int32_
  name: Diffuse
  nameWithType: BranchAPI.Diffuse
  fullName: ElseForty.splineplus.api.BranchAPI.Diffuse
- uid: ElseForty.splineplus.api.BranchAPI.Merge*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Merge
  href: ElseForty.splineplus.api.BranchAPI.Merge.html#ElseForty_splineplus_api_BranchAPI_Merge_SplinePlus_System_Int32_System_Int32_
  name: Merge
  nameWithType: BranchAPI.Merge
  fullName: ElseForty.splineplus.api.BranchAPI.Merge
- uid: ElseForty.splineplus.api.BranchAPI.Get_Length*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Length
  href: ElseForty.splineplus.api.BranchAPI.Get_Length.html#ElseForty_splineplus_api_BranchAPI_Get_Length_SplinePlus_System_Int32_
  name: Get_Length
  nameWithType: BranchAPI.Get_Length
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Length
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ElseForty.splineplus.api.BranchAPI.Get_Vertices*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Vertices
  href: ElseForty.splineplus.api.BranchAPI.Get_Vertices.html#ElseForty_splineplus_api_BranchAPI_Get_Vertices_SplinePlus_System_Int32_
  name: Get_Vertices
  nameWithType: BranchAPI.Get_Vertices
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Vertices
- uid: System.Collections.Generic.List{Vector3}
  commentId: T:System.Collections.Generic.List{Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.Vector3
    name: Vector3
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: ElseForty.splineplus.api.BranchAPI.Get_Normals*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Normals
  href: ElseForty.splineplus.api.BranchAPI.Get_Normals.html#ElseForty_splineplus_api_BranchAPI_Get_Normals_SplinePlus_System_Int32_
  name: Get_Normals
  nameWithType: BranchAPI.Get_Normals
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Normals
- uid: ElseForty.splineplus.api.BranchAPI.Get_Tangents*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Tangents
  href: ElseForty.splineplus.api.BranchAPI.Get_Tangents.html#ElseForty_splineplus_api_BranchAPI_Get_Tangents_SplinePlus_System_Int32_
  name: Get_Tangents
  nameWithType: BranchAPI.Get_Tangents
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Tangents
- uid: ElseForty.splineplus.api.BranchAPI.Set_Direction*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Set_Direction
  href: ElseForty.splineplus.api.BranchAPI.Set_Direction.html#ElseForty_splineplus_api_BranchAPI_Set_Direction_SplinePlus_System_Int32_BranchDirection_Enum_
  name: Set_Direction
  nameWithType: BranchAPI.Set_Direction
  fullName: ElseForty.splineplus.api.BranchAPI.Set_Direction
- uid: Global.BranchDirection_Enum
  isExternal: true
  name: BranchDirection_Enum
  nameWithType: BranchDirection_Enum
  fullName: BranchDirection_Enum
- uid: ElseForty.splineplus.api.BranchAPI.Get_Direction*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.Get_Direction
  href: ElseForty.splineplus.api.BranchAPI.Get_Direction.html#ElseForty_splineplus_api_BranchAPI_Get_Direction_SplinePlus_System_Int32_
  name: Get_Direction
  nameWithType: BranchAPI.Get_Direction
  fullName: ElseForty.splineplus.api.BranchAPI.Get_Direction
- uid: ElseForty.splineplus.api.BranchAPI.FlipHandles*
  commentId: Overload:ElseForty.splineplus.api.BranchAPI.FlipHandles
  href: ElseForty.splineplus.api.BranchAPI.FlipHandles.html#ElseForty_splineplus_api_BranchAPI_FlipHandles_SplinePlus_System_Int32_BranchDirection_Enum_
  name: FlipHandles
  nameWithType: BranchAPI.FlipHandles
  fullName: ElseForty.splineplus.api.BranchAPI.FlipHandles
memberLayout: SeparatePages
